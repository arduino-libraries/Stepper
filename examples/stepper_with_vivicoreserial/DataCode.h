// This code name is stepperwithvivicoreserial
// Generated by VIVIWARE developer v1.3.0 on https://dev.developer.viviware.com/hard/4158
// Generated at 2022/9/13 21:58:02
//
// Copyright (C) 2022 Takashi Ando
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301,
// USA.

////////////////////////////////////////////////////////////////////////////////
// AUTO GENERATED CODE
// (You can customize them if familiar with VivicoreSerial library spec)
////////////////////////////////////////////////////////////////////////////////

#define MIN_LIBRARY_VER_BUILD_NO (0x0012)
#include "VivicoreSerial.h"

// Dump packet data if true
#define DEBUG_PACKET (false)

// Check your configuration on VIVIWARE Developer or
// contact VIVIWARE support team if some error directive on this section

// Constant macro definitions
#define NUM_INPUT_DC (3)
#define NUM_OUTPUT_DC (1)
#define LEN_DC_CODE (1)
#define LEN_DC_BOOLEAN (1)
#define LEN_DC_ANALOG_2BYTES (2)

// Struct definition to receive/send
struct receiveStruct {
  boolean val_dc1;
  int16_t val_dc2;
  int16_t val_dc3;
};
struct sendStruct {
  boolean val_dc4;
};

// Library wrapper function prototypes
boolean initializeLibrary(const uint16_t version);
boolean timeout(const uint32_t msec);
receiveStruct receiveFromApp(void);
void sendToApp(const sendStruct cur_vals);

// Debug function prototypes
void dump(const uint8_t *data, const size_t data_len);
